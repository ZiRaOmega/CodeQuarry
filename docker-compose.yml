version: '3.8'  # Docker Compose file version

services:
  app:
    build: .  # Build the Docker image from the current directory
    ports:
      - "80:80"   # Map port 80 on the host to port 80 in the container for HTTP
      - "443:443" # Map port 443 on the host to port 443 in the container for HTTPS
      - "587:587" # Map port 587 on the host to port 587 in the container
    depends_on:
      - db  # Depend on the 'db' service
      - certbot  # Depend on the 'certbot' service
    environment:
      DB_HOST: db  # Set the DB_HOST environment variable to 'db'
      DB_PORT: 5432  # Set the DB_PORT environment variable to 5432
      DB_TYPE: postgres  # Set the DB_TYPE environment variable to 'postgres'
      DB_USER: codequarry  # Set the DB_USER environment variable to 'codequarry'
      DB_PASSWORD: CQ1234  # Set the DB_PASSWORD environment variable to 'CQ1234'
      DB_NAME: codequarrydb  # Set the DB_NAME environment variable to 'codequarrydb'
      URL: yourdomain.com  # Set the URL environment variable to your domain
    volumes:
      - img_data:/root/public/img  # Mount the 'img_data' volume to the '/root/public/img' directory in the container
      - certs:/etc/letsencrypt  # Mount the 'certs' volume for shared certificates
      - ./letsencrypt-site:/var/www/letsencrypt  # Mount the 'letsencrypt-site' directory for challenges
      - ./cert_scripts:/cert_scripts  # Mount the 'scripts' directory for custom scripts

  db:
    image: postgres:13  # Use the 'postgres:13' Docker image
    ports:
      - "5432:5432"  # Map port 5432 on the host to port 5432 in the container
    environment:
      POSTGRES_DB: codequarrydb  # Set the POSTGRES_DB environment variable to 'codequarrydb'
      POSTGRES_USER: codequarry  # Set the POSTGRES_USER environment variable to 'codequarry'
      POSTGRES_PASSWORD: CQ1234  # Set the POSTGRES_PASSWORD environment variable to 'CQ1234'
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Mount the 'postgres_data' volume to the '/var/lib/postgresql/data' directory in the container

  certbot:
    image: certbot/certbot
    volumes:
      - certs:/etc/letsencrypt
      - certbot_data:/var/lib/letsencrypt
      - ./letsencrypt-site:/var/www/letsencrypt
      - ./cert_scripts:/cert_scripts
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/letsencrypt --post-hook \"/scripts/restart_app.sh\"; sleep 12h; done'"

volumes:
  postgres_data:  # Create a volume named 'postgres_data'
  img_data:  # Create a volume named 'img_data'
  certs:  # Create a volume named 'certs'
  certbot_data:  # Create a volume named 'certbot_data'
